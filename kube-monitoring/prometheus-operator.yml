apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-prometheus-1710214099-operator
  namespace: kube-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/instance: kube-prometheus-1710214099
      app.kubernetes.io/name: kube-prometheus
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/instance: kube-prometheus-1710214099
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kube-prometheus
        app.kubernetes.io/version: 0.72.0
        helm.sh/chart: kube-prometheus-8.30.1
    spec:
      volumes:
      - name: empty-dir
        emptyDir: {}
      containers:
      - name: prometheus-operator
        image: docker.io/bitnami/prometheus-operator:0.72.0-debian-12-r1
        args:
        - '--kubelet-service=kube-system/kube-prometheus-1710214099-kubelet'
        - '--log-format=logfmt'
        - '--log-level=info'
        - '--localhost=127.0.0.1'
        - '--prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)'
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: PROMETHEUS_CONFIG_RELOADER
          valueFrom:
            configMapKeyRef:
              name: kube-prometheus-1710214099-operator
              key: prometheus-config-reloader
        resources: {}
        volumeMounts:
        - name: empty-dir
          mountPath: /tmp
          subPath: tmp-dir
        livenessProbe:
          httpGet:
            path: /metrics
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /metrics
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 1001
          runAsGroup: 0
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: kube-prometheus-1710214099-operator
      serviceAccount: kube-prometheus-1710214099-operator
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: operator
                  app.kubernetes.io/instance: kube-prometheus-1710214099
                  app.kubernetes.io/name: kube-prometheus
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
