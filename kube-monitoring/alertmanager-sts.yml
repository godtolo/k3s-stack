apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alertmanager-kube-prometheus-1710214099-alertmanager
  namespace: kube-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      alertmanager: kube-prometheus-1710214099-alertmanager
      app.kubernetes.io/instance: kube-prometheus-1710214099-alertmanager
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
  template:
    metadata:
      creationTimestamp: null
      labels:
        alertmanager: kube-prometheus-1710214099-alertmanager
        app.kubernetes.io/component: alertmanager
        app.kubernetes.io/instance: kube-prometheus-1710214099-alertmanager
        app.kubernetes.io/managed-by: prometheus-operator
        app.kubernetes.io/name: alertmanager
        app.kubernetes.io/version: 0.26.0
      annotations:
        kubectl.kubernetes.io/default-container: alertmanager
    spec:
      volumes:
      - name: config-volume
        secret:
          secretName: alertmanager-kube-prometheus-1710214099-alertmanager-generated
          defaultMode: 420
      - name: tls-assets
        projected:
          sources:
          - secret:
              name: >-
                alertmanager-kube-prometheus-1710214099-alertmanager-tls-assets-0
          defaultMode: 420
      - name: config-out
        emptyDir:
          medium: Memory
      - name: web-config
        secret:
          secretName: alertmanager-kube-prometheus-1710214099-alertmanager-web-config
          defaultMode: 420
      - name: alertmanager-kube-prometheus-1710214099-alertmanager-db
        emptyDir: {}
      - name: empty-dir
        emptyDir: {}
      initContainers:
      - name: init-config-reloader
        image: docker.io/bitnami/prometheus-operator:0.72.0-debian-12-r1
        command:
        - /bin/prometheus-config-reloader
        args:
        - '--watch-interval=0'
        - '--listen-address=:8080'
        - '--config-file=/etc/alertmanager/config/alertmanager.yaml.gz'
        - >-
          --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
        - '--watched-dir=/etc/alertmanager/config'
        ports:
        - name: reloader-web
          containerPort: 8080
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: '-1'
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /etc/alertmanager/config
        - name: config-out
          mountPath: /etc/alertmanager/config_out
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
      containers:
      - name: alertmanager
        image: docker.io/bitnami/alertmanager:0.27.0-debian-12-r1
        args:
        - '--config.file=/etc/alertmanager/config_out/alertmanager.env.yaml'
        - '--storage.path=/alertmanager'
        - '--data.retention=120h'
        - '--cluster.listen-address='
        - '--web.listen-address=:9093'
        - >-
          --web.external-url=http://kube-prometheus-1710214099-alertmanager.kube-monitoring:9093/
        - '--web.route-prefix=/'
        - >-
          --cluster.label=kube-monitoring/kube-prometheus-1710214099-alertmanager
        - >-
          --cluster.peer=alertmanager-kube-prometheus-1710214099-alertmanager-0.alertmanager-operated:9094
        - '--cluster.reconnect-timeout=5m'
        - '--web.config.file=/etc/alertmanager/web_config/web-config.yaml'
        ports:
        - name: web
          containerPort: 9093
          protocol: TCP
        - name: mesh-tcp
          containerPort: 9094
          protocol: TCP
        - name: mesh-udp
          containerPort: 9094
          protocol: UDP
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        resources:
          requests:
            memory: 200Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/alertmanager/config
        - name: config-out
          readOnly: true
          mountPath: /etc/alertmanager/config_out
        - name: tls-assets
          readOnly: true
          mountPath: /etc/alertmanager/certs
        - name: alertmanager-kube-prometheus-1710214099-alertmanager-db
          mountPath: /alertmanager
        - name: empty-dir
          mountPath: /tmp
          subPath: tmp-dir
        - name: web-config
          readOnly: true
          mountPath: /etc/alertmanager/web_config/web-config.yaml
          subPath: web-config.yaml
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          timeoutSeconds: 3
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 120
        readinessProbe:
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          initialDelaySeconds: 3
          timeoutSeconds: 3
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 120
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 1001
          runAsGroup: 0
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - name: config-reloader
        image: docker.io/bitnami/prometheus-operator:0.72.0-debian-12-r1
        command:
        - /bin/prometheus-config-reloader
        args:
        - '--listen-address=:8080'
        - '--reload-url=http://127.0.0.1:9093/-/reload'
        - '--config-file=/etc/alertmanager/config/alertmanager.yaml.gz'
        - >-
          --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
        - '--watched-dir=/etc/alertmanager/config'
        ports:
        - name: reloader-web
          containerPort: 8080
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SHARD
          value: '-1'
        resources:
          limits:
            cpu: 10m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 50Mi
        volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /etc/alertmanager/config
        - name: config-out
          mountPath: /etc/alertmanager/config_out
        livenessProbe:
          tcpSocket:
            port: reloader-web
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          tcpSocket:
            port: reloader-web
          initialDelaySeconds: 15
          timeoutSeconds: 5
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 6
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsUser: 1001
          runAsGroup: 0
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
      dnsPolicy: ClusterFirst
      serviceAccountName: kube-prometheus-1710214099-alertmanager
      serviceAccount: kube-prometheus-1710214099-alertmanager
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: alertmanager
                  app.kubernetes.io/instance: kube-prometheus-1710214099
                  app.kubernetes.io/name: kube-prometheus
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  serviceName: alertmanager-operated
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
