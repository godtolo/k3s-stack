apiVersion: argoproj.io/v1alpha1
destination:
  namespace: meilisearch
  server: 'https://kubernetes.default.svc'
kind: Application
metadata:
  labels:
    argocd.argoproj.io/instance: argocd-k3s-mdeo
  name: meilisearch-dev
  namespace: argocd
project: default
source:
  helm:
    parameters:
    - name: auth.existingMasterKeySecret
    values: "#magic___^_^___line\npersistence:\n  # -- Enable persistence using PVC\n  enabled: true\n  # -- PVC Access Mode\n  accessMode: ReadWriteOnce\n  storageClass: \"local-path\"\n  storageClassName: \"local-path\"\n  volumeMode: Filesystem\n  #magic___^_^___line\n  ## Data Persistent Volume existing claim name\n  ## If defined, PVC must be created manually before volume will be bound\n  # -- Existing PVC\n  existingClaim: \"\"\n  # -- PVC Storage Request\n  size: 2Gi\n  # -- Additional annotations for PVC\n  annotations: {}\n  volume:\n    name: meilisearch\n    mountPath: /meili_data\n    #magic___^_^___line\n# Environment loaded into the configMap\nenvironment:\n  # -- Deactivates analytics\n  MEILI_NO_ANALYTICS: true\n  # -- Sets the environment. Either **production** or **development**\n  MEILI_ENV: production\n    #magic___^_^___line\n# -- Resources allocation (Requests and Limits)\nresources: \n  limits:\n    cpu: 100m\n    memory: 128Mi\n  requests:\n    cpu: 50m\n    memory: 128Mi\nservice:\n  port: 7700\n  type: NodePort\n"
  path: charts/meilisearch
  repoURL: 'https://github.com/meilisearch/meilisearch-kubernetes.git'
  targetRevision: meilisearch-0.4.0
spec:
  destination:
    name: ''
    namespace: meilisearch-dev
    server: 'https://kubernetes.default.svc'
  project: default
  source:
    path: charts/meilisearch
    repoURL: 'https://github.com/meilisearch/meilisearch-kubernetes.git'
    targetRevision: HEAD
  sources: []
syncPolicy:
  syncOptions:
  - CreateNamespace=true
